close all;
clear all;

%% Declare
connectnode = csvread('connected_node_total.csv');
first_node = 27;  %최초 시작노드
exit = [38 39
%exit = [10, 11, 14, 16]; %2
%exit = [1 2 10 11 12 13 14 15 38]; %3
node_location = csvread('node_location3.csv');
%3용

dynamics = csvread('centered_temp_per_node.csv');
time = dynamics(2:end, 1);

L = 55;
w = 19;
sum = zeros(1, size(connectnode,1)).*99;
for t = L:L+19
    load(['simu_predict_t_',num2str(time(t, 1)),'_L_',num2str(L*3.6),'_w_',num2str(w*3.6),'.mat']);
    sum = sum + y;
end
sum = sum / 20;    

score = sum';
%score=[51;8;72;100;35;97;35;89;45;41;22;13;31;73;78;69];
%score = int32(rand(size(connectnode,1), 1).*99.9);
%score = ones(size(connectnode,1), 1).*99;


%reliability=[1;84;92;77;4;38;70;73;22;27;67;48;62;24;18;83];
%reliability = int32(rand(size(connectnode,1), 1).*99.9);
reliability = ones(size(connectnode,1), 1).*99;

[X, f] = fun_path_find_result3(connectnode, first_node, exit, score, reliability, node_location, 1);
hold on;
node_num = size(connectnode,1);
left_val = length(f)/node_num;

axis([-5 40 -5 105]);

%f_result = [];
%while left_val ~= 0
%    f_result = [f_result; f(1:node_num)];
%    f(1:node_num) = [];
%    left_val = left_val-1;
%end

%total_route = csvread('route2.csv');
%total_score = [];

%for index = 1:size(total_route,1)
%   route = total_route(index, :);
%   route(find(route == 0))=[];
%   total_score = [total_score, find_score(f, route)];
%end

%total_score = total_score'

%%

%max_score_route = total_route(find(total_score == min(total_score)), :);
%max_score_route(find(max_score_route == 0))=[];

%x = node_location (:, 1) * 2;
%y = node_location (:, 2) * 2;

%for j=1:length(max_score_route)-1
%    prev_node = max_score_route(j);
%    start_node = max_score_route(j+1);

%    tempx = [x(prev_node), x(start_node)];
%    tempy = [y(prev_node), y(start_node)];
%    plot( tempx, tempy, 'xg', 'LineWidth', 2);
%    hold on;

%end

find(X==1)